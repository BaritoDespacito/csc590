#include "sdf.stoy"
#include "easing.stoy"
#define PERIOD 1.0
#define PI 3.14159265359

void mainImage(out vec4 fragColor, in vec2 fragCoord) {

    // boilerplate
    vec2 uv = vec2(fragCoord / iResolution.xy);
    uv.x *= iResolution.x / iResolution.y;

    // create easingTime
    // float iTime = easeInOutQuad(mod(iTime, 1.0));

    // define rows
    float columns = 10.0;
    float rows = 10.0;
    uv *= vec2(columns, rows);

    // define phases
    float phase = step(sin(iTime / PERIOD * PI), 0.0);

    // make stuff move
    uv.x += phase * iTime / PERIOD * mod(floor(uv.y), 2.0);
    uv.x -= phase * iTime / PERIOD * (1.0-mod(floor(uv.y), 2.0));

    uv.y += (1.0 - phase) * iTime / PERIOD * mod(floor(uv.x), 2.0);
    uv.y -= (1.0 - phase) * iTime / PERIOD * (1.0-mod(floor(uv.x), 2.0));
    
    // define colors
    vec3 color1 = vec3(
        (abs(mod(floor(uv.x), 2.0)-mod(floor(uv.y), 2.0))), 
        0.0, 
        (1.0-abs(mod(floor(uv.x), 2.0)-mod(floor(uv.y), 2.0)))
    );

    // domain repetition
    uv = fract(uv);

    // create rect
    float rect1 = rectSdf(vec2(0.0, 0.0), vec2(0.9, 0.9), uv);

    vec3 color = mix(vec3(0.0), color1, rect1);

    fragColor = vec4(color, 1.0);
}